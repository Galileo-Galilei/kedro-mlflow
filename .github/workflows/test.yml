# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test,extras]
    - name: Check code formatting with ruff
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' # linting should occur only once in the loop
      run: |
        ruff format . --check
    - name: Check import order and syntax with ruff
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' # linting should occur only once in the loop
      #"F",  # Pyflakes
      #"E",  # Pycodestyle
      # "W",  # Pycodestyle
      # "UP",  # pyupgrade
      # "I",  # isort
      # "PL", # Pylint
      # PLR0913 lines-too-long managed by "ruff format"
      run: |
        ruff check . --select F,E,W,UP,I,PL --ignore E,PLR0913 --exclude "/template/"

    - name: Test with pytest and generate coverage report
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v1
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' # upload should occur only once in the loop
      with:
        token: ${{ secrets.CODECOV_TOKEN }}  # token is not mandatory but make access more stable
        file: ./coverage.xml
        env_vars: OS,PYTHON
        fail_ci_if_error: true
